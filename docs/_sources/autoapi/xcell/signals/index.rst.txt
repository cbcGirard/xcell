:py:mod:`xcell.signals`
=======================

.. py:module:: xcell.signals

.. autoapi-nested-parse::

   Handlers for dynamic signals



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   xcell.signals.Signal
   xcell.signals.PiecewiseSignal
   xcell.signals.BiphasicSignal




.. py:class:: Signal(value)

   Base class for time-dependent values.

   .. attribute:: value

      Constant value of signal.

      :type: float

   .. py:property:: value

      Current value of signal

   .. py:method:: get_value_at_time(t)

      Get value of signal at time t.

      :param t: Time to query signal.
      :type t: float

      :returns: Value at time.
      :rtype: float


   .. py:method:: reset()



.. py:class:: PiecewiseSignal(t=0, y=0)

   Bases: :py:obj:`Signal`

   Piecewise signal from time, value pairs.

   .. py:property:: value

      Current value of signal

   .. py:method:: get_value_at_time(t)

      Get value of signal at time t.

      :param t: Time to query signal.
      :type t: float

      :returns: Value at time.
      :rtype: float


   .. py:method:: reset()



.. py:class:: BiphasicSignal(t0=0, y0=0)

   Bases: :py:obj:`PiecewiseSignal`

   Piecewise signal from time, value pairs.

   .. py:method:: add_pulse(t_start, pulse_duration, pulse_amplitude, interphase=0.0)

      Add a biphasic pulse to the signal.

      :param t_start: Time of pulse initiation
      :type t_start: float
      :param pulse_duration: Duration of a pulse phase in seconds.
      :type pulse_duration: float
      :param pulse_amplitude: Amplitude of pulse. Use a negative value to place the negative phase first.
      :type pulse_amplitude: float
      :param interphase: Time between phases of the pulse (default 0.) Not yet implemented.
      :type interphase: float



